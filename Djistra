package graphs;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Stack;
import java.util.Queue;
import java.util.LinkedList;

public class Graph {
	static private int V;
	int graph[][];
	static int res=0;
	Graph(int n){
		V=n;
		graph=new int[V][V];
	}
	void addEdge(int u,int v,int w) {
		graph[u][v]=w;
		graph[v][u]=w;
	}
	void djistra(int s,int dist[]) {
		boolean mset[]=new boolean[V];
		//int dist[]=new int[V];
		Arrays.fill(mset, false);
		Arrays.fill(dist,Integer.MAX_VALUE);
		dist[s]=0;
		for(int count=0;count<V;count++) {
			int u=-1;
			for(int i=0;i<V;i++) {
				if(!mset[i]&&(u==-1||dist[i]<dist[u])) {
					u=i;
				}
			}
			mset[u]=true;
			res+=dist[u];
			for(int v=0;v<V;v++) {
				if(!mset[v]&&graph[u][v]!=0&&dist[v]>graph[u][v]) {
					dist[v]=graph[u][v];
				}
			}
			
		}
		
		
	}
	public static void main(String args[]) {
		Graph g=new Graph(4);
		int dist[]=new int[V];
		g.addEdge(0, 1, 5+10);
		g.addEdge(0, 2, 8+10);
		g.addEdge(1, 2, 1+10);
		g.addEdge(1, 3, 15+10);
		g.addEdge(2,3,25+10);
		g.djistra(0,dist);
		for(int i=0;i<dist.length;i++) {
			System.out.print(dist[i]+" ");
		}
		System.out.println(res+" ");
	}
	
	
	
		
		
	}
	


	


