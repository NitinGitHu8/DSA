package graphs;
import java.util.ArrayList;
import java.util.Arrays;

public class Graph {
	static private int V;
	int graph[][];
	Graph(int v){
		V=v;
		graph=new int[V][V];
	}
	void addEdge(int u,int v,int w) {
		graph[u][v]=w;
		graph[v][u]=w;
	}
	void PrimAlgorithm(int s,int dist[]) {
		boolean mset[]=new boolean[V];
		
		
		dist[s]=0;
		//int res=0;
		for(int count=0;count<V-1;count++) {
			int u=-1;
			for(int i=0;i<V;i++) {
				if(!mset[i]&&(u==-1)) {
					u=i;
					
				}
				
			}
			mset[u]=true;
			//res=res+key[u];
			for(int v=0;v<V;v++) {
				if(!mset[v]&&graph[u][v]!=0) {
					dist[v]=Math.min(dist[v], dist[u]+graph[u][v]);			
					}
			}
			
			
			
		}
		//return res;
	}
	public static void main(String args[]) {
		Graph g=new Graph(4);
		int dist[]=new int[V];
		Arrays.fill(dist, Integer.MAX_VALUE);
		g.addEdge(0,1,5);
		g.addEdge(0,2,8);
		g.addEdge(1,2,10);
		g.addEdge(2,3,20);
		g.addEdge(1,3,15);
		g.PrimAlgorithm(0,dist);
		//System.out.println(res+" ");
		for(int i=0;i<dist.length;i++) {
			System.out.print(dist[i]+" ");
		}
	}
